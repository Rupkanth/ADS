#define MAX 10
#include <iostream>
using namespace std;
class HeapADT
{
    public:
    void heapsort(int a[MAX],int);
    void buildheap(int a[MAX],int,int);
};
void HeapADT::buildheap(int a[MAX],int root,int bottom)
{
    int temp,maxc,done=0;
    while(root*2<=bottom && (!done))
    {
        if(root*2==bottom)
        maxc=root*2;
        else if(a[root*2]>a[root*2+1])
       maxc=root*2;
       else
       maxc=root*2+1;
       if(a[root]<a[maxc])
       {
           temp=a[root];
           a[root]=a[maxc];
           a[maxc]=temp;
           root=maxc;
       }
       else
       done=1;
    }
}
void HeapADT::heapsort(int a[MAX],int n)
{
    int i,temp;
    for(i=n/2;i>0;i--)
    buildheap(a,i,n);
    for(i=n;i>=1;i--)
    {
        temp=a[1];
        a[1]=a[i];
        a[i]=temp;
        buildheap(a,1,i-1);
    }
}
int main(){
    HeapADT b;
    int n;
    cin>>n;
    int a[n];
    cout<<"enter elements";
    for(int i=1;i<=n;i++)
    {
        cin>>a[i];
    }
    b.heapsort(a,n);
    //int a[7]={89,2,67,98,100,8,200};
    
    //b.heapsort(a,7);
    for(int i=1;i<=n;i++)
    cout<<a[i]<<" ";

    return 0;
}


